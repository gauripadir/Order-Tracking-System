@* @model Order

<h2>Track Order #@Model.OrderId</h2>
<p>Date: @Model.OrderDate.ToString("dd MMM yyyy")</p>
<p>Total: $@Model.TotalAmount</p>

<div class="progress-bar-container">
    <div class="step @(Model.OrderStatus == "Pending" ? "active" : (Model.OrderStatus != "Pending" ? "completed" : ""))">
        Order Placed
    </div>
    <div class="step @(Model.OrderStatus == "Preparing" ? "active" : (Model.OrderStatus == "OutForDelivery" || Model.OrderStatus == "Delivered" ? "completed" : ""))">
        Preparing
    </div>
    <div class="step @(Model.OrderStatus == "OutForDelivery" ? "active" : (Model.OrderStatus == "Delivered" ? "completed" : ""))">
        Out for Delivery
    </div>
    <div class="step @(Model.OrderStatus == "Delivered" ? "active" : "")">
        Delivered
    </div>
</div>

<style>
   
    .progress-bar-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px 0;
        position: relative;
        width: 100%;
        max-width: 600px;
    }

    .step {
        flex: 1;
        text-align: center;
        padding: 10px;
        position: relative;
        font-size: 14px;
        color: #999;
    }

        .step::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateX(50%);
            width: 100%;
            height: 4px;
            background: #ddd;
            z-index: -1;
        }

        .step.completed {
            color: #fff;
            background-color: #4caf50;
            border-radius: 20px;
        }

        .step.active {
            color: #fff;
            background-color: #2196f3;
            border-radius: 20px;
        }


</style> *@


@model Order

<div class="container py-5">
    <h2 class="text-center mb-4">Track Order #@Model.OrderId</h2>
    <div class="row">
        <div class="col-md-6">
            <p><strong>Date:</strong> @Model.OrderDate.ToString("dd MMM yyyy")</p>
            <p><strong>Total:</strong> $@Model.TotalAmount</p>
        </div>
    </div>

    <div class="progress-bar-container">
        <div class="step @(Model.OrderStatus == "Pending" ? "active" : (Model.OrderStatus != "Pending" ? "completed" : ""))">
            <img src="https://img.icons8.com/ios-filled/50/000000/checkmark.png" alt="Order Placed" class="step-icon" />
            <div>Order Placed</div>
        </div>
        <div class="step @(Model.OrderStatus == "Preparing" ? "active" : (Model.OrderStatus == "OutForDelivery" || Model.OrderStatus == "Delivered" ? "completed" : ""))">
            <img src="https://img.icons8.com/ios-filled/50/000000/chef-hat.png" alt="Preparing" class="step-icon" />
            <div>Preparing</div>
        </div>
        <div class="step @(Model.OrderStatus == "OutForDelivery" ? "active" : (Model.OrderStatus == "Delivered" ? "completed" : ""))">
            <img src="https://img.icons8.com/ios-filled/50/000000/delivery.png" alt="Out for Delivery" class="step-icon" />
            <div>Out for Delivery</div>
        </div>
        <div class="step @(Model.OrderStatus == "Delivered" ? "active" : "")">
            <img src="https://img.icons8.com/ios-filled/50/000000/box.png" alt="Delivered" class="step-icon" />
            <div>Delivered</div>
        </div>
    </div>
</div>

<style>
    /* Container to center content */
    .container {
        max-width: 900px;
        margin: 0 auto;
    }

    /* Progress Bar Container */
    .progress-bar-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 40px 0;
        position: relative;
        width: 100%;
    }

    /* Individual steps */
    .step {
        text-align: center;
        position: relative;
        font-size: 14px;
        color: #999;
        flex: 1;
        padding: 10px 0;
        border-radius: 20px;
        transition: all 0.3s ease;
    }

    /* Step Icon */
    .step-icon {
        width: 50px;
        height: 50px;
        margin-bottom: 10px;
    }

    /* Step Connecting Lines */
    .step::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translateX(50%);
        width: 100%;
        height: 4px;
        background: #ddd;
        z-index: -1;
    }

    /* Completed Step Styling */
    .step.completed {
        color: #fff;
        background-color: #4caf50;
    }

    /* Active Step Styling */
    .step.active {
        color: #fff;
        background-color: #2196f3;
    }

    /* Active and Completed Steps Alignment */
    .step.completed, .step.active {
        background-color: #4caf50;
        color: #fff;
    }

    .step.active {
        background-color: #2196f3;
    }

    /* Styling for labels and text */
    .step div {
        font-weight: bold;
    }

    /* Better alignment for titles */
    h2 {
        font-size: 32px;
        font-weight: 600;
    }
</style>

